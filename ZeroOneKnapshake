class Solution {
    public boolean canPartition(int[] nums) {
        int sum=0;
        for(int i=0;i<nums.length;i++)
        {
            sum=sum+nums[i];
        }
        
        int part=sum/2;
        boolean dp[][]=new boolean[nums.length+1][sum+1];
       // Arrays.sort(nums);
        if(sum%2==1)
        {
            return false;
        }
        else
        {
            for(int i=0;i<=nums.length;i++)
            {
                for(int j=0;j<=part;j++)
                {
                    if(i==0 && j==0)
                    {
                        dp[i][j]=true;
                    }
                    else if(i==0)
                    {
                        dp[i][j]=false;
                    }
                    else if(j==0)
                    {
                        dp[i][j]=true;
                    }
                    else
                    {
                        if(dp[i-1][j]==true)
                        {
                            dp[i][j]=true;
                        }
                        else if(j-nums[i-1]>=0 && dp[i-1][j-nums[i-1]]==true)
                        {
                        dp[i][j]=true;
                        }
                    }
                }
            }
        }
        return dp[nums.length][part];
        
    }
}